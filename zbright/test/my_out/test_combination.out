;IR code
;LABEL main
;LINK
;STOREI 20 $T1
;STOREI $T1 a
;STOREI 30 $T2
;STOREI $T2 b
;STOREI 40 $T3
;STOREI $T3 c
;MULTI a b $T4
;ADDI c $T4 $T5
;MULTI a b $T6
;ADDI $T6 c $T7
;DIVI $T7 a $T8
;ADDI $T5 $T8 $T9
;STOREI 20 $T10
;ADDI $T9 $T10 $T11
;STOREI $T11 c
;MULTI b b $T12
;ADDI $T12 a $T13
;STOREI $T13 b
;MULTI b a $T14
;DIVI $T14 a $T15
;STOREI $T15 a
;WRITEI c
;WRITEI b
;WRITEI a
;tiny code
var a
var b
var c
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label main
link 0
;                                // 0 0 0 0 
;                                // f f f f 

;                                // assign r0
move 20 r0
move r0 a
;                                // Make clean r0
;                                // 0 1 1 1 
;                                // f f f f 

;                                // 0 1 1 1 
;                                // f f f f 

;                                // assign r1
move 30 r1
move r1 b
;                                // Make clean r1
;                                // 1 0 2 2 
;                                // f f f f 

;                                // 1 0 2 2 
;                                // f f f f 

;                                // assign r2
move 40 r2
move r2 c
;                                // Make clean r2
;                                // 2 1 0 3 
;                                // f f f f 

;                                // 2 1 0 3 
;                                // f f f f 

;                                // assign r3
move c r3
;                                // 3 2 1 0 
;                                // f f f f 

;                                // assign r0
move a r0
muli b r0
;                                // 0 3 2 1 
;                                // f f f f 

;                                //DIRTY r0
;                                // 0 4 3 2 
;                                // t f f f 

;                                // Make clean r0
;                                // 0 4 3 2 
;                                // f f f f 

addi r0 r3
;                                // 0 4 3 2 
;                                // f f f f 

;                                //DIRTY r3
;                                // 1 5 4 0 
;                                // f f f t 

;                                // 1 5 4 0 
;                                // f f f t 

;                                // assign r1
move a r1
muli b r1
;                                // 2 0 5 1 
;                                // f f f t 

;                                //DIRTY r1
;                                // 3 0 6 2 
;                                // f t f t 

addi c r1
;                                // 3 0 6 2 
;                                // f t f t 

;                                //DIRTY r1
;                                // 4 0 7 3 
;                                // f t f t 

divi a r1
;                                // 4 0 7 3 
;                                // f t f t 

;                                //DIRTY r1
;                                // 5 0 8 4 
;                                // f t f t 

;                                // Make clean r1
;                                // 5 0 8 4 
;                                // f f f t 

addi r1 r3
;                                // 5 0 8 4 
;                                // f f f t 

;                                //DIRTY r3
;                                // 6 1 9 0 
;                                // f f f t 

;                                // 6 1 9 0 
;                                // f f f t 

;                                // assign r2
move 20 r2
;                                // Make clean r2
;                                // 7 2 0 1 
;                                // f f f t 

addi r2 r3
;                                // 7 2 0 1 
;                                // f f f t 

;                                //DIRTY r3
;                                // 8 3 1 0 
;                                // f f f t 

move r3 c
;                                // Make clean r3
;                                // 8 3 1 0 
;                                // f f f f 

;                                // 8 3 1 0 
;                                // f f f f 

;                                // assign r0
move b r0
muli b r0
;                                // 0 4 2 1 
;                                // f f f f 

;                                //DIRTY r0
;                                // 0 5 3 2 
;                                // t f f f 

addi a r0
;                                // 0 5 3 2 
;                                // t f f f 

;                                //DIRTY r0
;                                // 0 6 4 3 
;                                // t f f f 

move r0 b
;                                // Make clean r0
;                                // 0 6 4 3 
;                                // f f f f 

;                                // 0 6 4 3 
;                                // f f f f 

;                                // assign r1
move b r1
muli a r1
;                                // 1 0 5 4 
;                                // f f f f 

;                                //DIRTY r1
;                                // 2 0 6 5 
;                                // f t f f 

divi a r1
;                                // 2 0 6 5 
;                                // f t f f 

;                                //DIRTY r1
;                                // 3 0 7 6 
;                                // f t f f 

move r1 a
;                                // Make clean r1
;                                // 3 0 7 6 
;                                // f f f f 

sys writei c
sys writei b
sys writei a
end
