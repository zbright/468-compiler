;IR code
;LABEL main
;LINK
;STOREF 0.0001 $T1
;STOREF $T1 tolerance
;STOREF 7.0 $T2
;STOREF $T2 num
;STOREF num approx
;STOREI 0 $T3
;STOREI $T3 count
;STOREF 0.0 $T4
;STOREF $T4 diff
;STOREI 0 $T5
;STOREI $T5 enough
;LABEL label0_start
;STOREI 1 $T6
;EQ enough $T6 label0_end
;STOREI 1 $T7
;ADDI count $T7 $T8
;STOREI $T8 count
;STOREF 0.5 $T9
;DIVF num approx $T10
;ADDF approx $T10 $T11
;MULTF $T9 $T11 $T12
;STOREF $T12 newapprox
;SUBF approx newapprox $T13
;STOREF $T13 diff
;STOREF 0.0 $T14
;LE diff $T14 label1_else
;GE diff tolerance label2_else
;STOREI 1 $T15
;STOREI $T15 enough
;JUMP label2_end
;LABEL label2_else
;LABEL label2_end
;JUMP label1_end
;LABEL label1_else
;STOREF 0.0 $T16
;SUBF $T16 tolerance $T17
;LE diff $T17 label3_else
;STOREI 1 $T18
;STOREI $T18 enough
;JUMP label3_end
;LABEL label3_else
;LABEL label3_end
;LABEL label1_end
;STOREF newapprox approx
;JUMP label0_start
;LABEL label0_end
;WRITEF approx
;WRITEI count
;tiny code
var count
var enough
var newapprox
var approx
var num
var tolerance
var diff
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label main
link 0
move 0.0001 r0
move r0 tolerance
move 7.0 r1
move r1 num
move num r2
move r2 approx
move 0 r0
move r0 count
move 0.0 r1
move r1 diff
move 0 r2
move r2 enough
label label0_start
move 1 r3
cmpi enough r3
jeq label0_end
move 1 r0
move count r1
addi r0 r1
move r1 count
move 0.5 r2
move num r3
divr approx r3
move approx r0
addr r3 r0
mulr r0 r2
move r2 newapprox
move approx r1
subr newapprox r1
move r1 diff
move 0.0 r3
cmpr diff r3
jle label1_else
move tolerance r0
cmpr diff r0
jge label2_else
move 1 r2
move r2 enough
jmp label2_end
label label2_else
label label2_end
jmp label1_end
label label1_else
move 0.0 r1
subr tolerance r1
cmpr diff r1
jle label3_else
move 1 r3
move r3 enough
jmp label3_end
label label3_else
label label3_end
label label1_end
move newapprox r0
move r0 approx
jmp label0_start
label label0_end
sys writer approx
sys writei count
end
