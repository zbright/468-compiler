;IR code
;STOREI 1 $T1
;NE a $T1 label0_else
;JUMP label0_end
;LABEL label0_else
;STOREI FUNCTION CALL VARIABLE tret
;MULTI tret a $T2
;STOREI $T2 ret
;LABEL label0_end
;WRITES input
;READI num
;STOREI 1 $T3
;NE num $T3 label1_else
;STOREI 1 $T4
;STOREI $T4 result
;JUMP label1_end
;LABEL label1_else
;LABEL label1_end
;STOREI 1 $T5
;LE num $T5 label2_else
;STOREI FUNCTION CALL VARIABLE result
;JUMP label2_end
;LABEL label2_else
;STOREI 0 $T6
;STOREI $T6 result
;LABEL label2_end
;WRITEI result
;WRITES eol
;tiny code
str input "Please enter an integer number: "
str eol "\n"
push
push r0
push r1
push r2
push r3
push r4
push r5
push r6
push r7
push r8
push r9
push r10
push r11
push r12
push r13
push r14
push r15
jsr main
sys halt
label factorial
link 2
move 1 r0
cmpi $18 r0
jne label0_else
move 1 r1
move r1 r0
move r0 $19
unlnk
ret
jmp label0_end
label label0_else
move $18 r2
move 1 r3
subi r3 r2
push
push r2
push r0
push r1
push r2
push r3
push r4
push r5
push r6
push r7
push r8
push r9
push r10
push r11
push r12
push r13
push r14
push r15
jsr factorial
push r15
push r14
push r13
push r12
push r11
push r10
push r9
push r8
push r7
push r6
push r5
push r4
push r3
push r2
push r1
push r0
pop
pop r1
move r1 $-1
move $-1 r4
muli $18 r4
move r4 $-2
label label0_end
move $-2 r0
move r0 $19
unlnk
ret
label main
link 2
sys writes input
sys readi $-1
move 1 r0
cmpi $-1 r0
jne label1_else
move 1 r1
move r1 $-2
jmp label1_end
label label1_else
label label1_end
move 1 r2
cmpi $-1 r2
jle label2_else
push
push $-1
push r0
push r1
push r2
push r3
push r4
push r5
push r6
push r7
push r8
push r9
push r10
push r11
push r12
push r13
push r14
push r15
jsr factorial
push r15
push r14
push r13
push r12
push r11
push r10
push r9
push r8
push r7
push r6
push r5
push r4
push r3
push r2
push r1
push r0
pop
pop r1
move r1 $-2
jmp label2_end
label label2_else
move 0 r3
move r3 $-2
label label2_end
sys writei $-2
sys writes eol
move 0 r4
move r4 r0
move r0 $18
unlnk
ret
end
