;IR code
;LABEL main
;LINK
;STOREF 7.0 $T1
;STOREF $T1 num
;STOREI 100 $T2
;STOREI $T2 i
;STOREI 1 $T3
;STOREI $T3 j
;STOREF num approx
;LABEL label0_start
;STOREI 0 $T4
;EQ i $T4 label0_end
;STOREF 0.5 $T5
;DIVF num approx $T6
;ADDF approx $T6 $T7
;MULTF $T5 $T7 $T8
;STOREF $T8 newapprox
;STOREF newapprox approx
;STOREI 1 $T9
;SUBI i $T9 $T10
;STOREI $T10 i
;JUMP label0_start
;LABEL label0_end
;WRITEF approx
;tiny code
var i
var j
var newapprox
var approx
var num
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label main
link 0
;                                // 0 0 0 0 
;                                // f f f f 

;                                // assign r0
move 7.0 r0
move r0 num
;                                // Make clean r0
;                                // 0 1 1 1 
;                                // f f f f 

;                                // 0 1 1 1 
;                                // f f f f 

;                                // assign r1
move 100 r1
move r1 i
;                                // Make clean r1
;                                // 1 0 2 2 
;                                // f f f f 

;                                // 1 0 2 2 
;                                // f f f f 

;                                // assign r2
move 1 r2
move r2 j
;                                // Make clean r2
;                                // 2 1 0 3 
;                                // f f f f 

;                                // 2 1 0 3 
;                                // f f f f 

;                                // assign r3
move num r3
move r3 approx
label label0_start
;                                // 3 2 1 0 
;                                // f f f f 

;                                // assign r0
move 0 r0
cmpi i r0
jeq label0_end
;                                // 0 3 2 1 
;                                // f f f f 

;                                // assign r1
move 0.5 r1
;                                // 1 0 3 2 
;                                // f f f f 

;                                // assign r2
move approx r2
;                                // 2 1 0 3 
;                                // f f f f 

;                                // assign r3
move num r3
divr approx r3
;                                // 3 2 1 0 
;                                // f f f f 

;                                //DIRTY r3
;                                // 4 3 2 0 
;                                // f f f t 

;                                // Make clean r3
;                                // 4 3 2 0 
;                                // f f f f 

addr r3 r2
;                                // 4 3 2 0 
;                                // f f f f 

;                                //DIRTY r2
;                                // 5 4 0 1 
;                                // f f t f 

;                                // Make clean r2
;                                // 5 4 0 1 
;                                // f f f f 

mulr r2 r1
;                                // 5 4 0 1 
;                                // f f f f 

;                                //DIRTY r1
;                                // 6 0 1 2 
;                                // f t f f 

move r1 newapprox
;                                // Make clean r1
;                                // 6 0 1 2 
;                                // f f f f 

;                                // 6 0 1 2 
;                                // f f f f 

;                                // assign r0
move newapprox r0
move r0 approx
;                                // 0 1 2 3 
;                                // f f f f 

;                                // assign r3
move i r3
;                                // 1 2 3 0 
;                                // f f f f 

;                                // assign r2
move 1 r2
;                                // Make clean r2
;                                // 2 3 0 1 
;                                // f f f f 

subi r2 r3
;                                // 2 3 0 1 
;                                // f f f f 

;                                //DIRTY r3
;                                // 3 4 1 0 
;                                // f f f t 

move r3 i
;                                // Make clean r3
;                                // 3 4 1 0 
;                                // f f f f 

jmp label0_start
label label0_end
sys writer approx
end
