;IR code
;LABEL factorial
;LINK
;STOREI 0 $T1
;NE $P1 $T1 label0_else
;STOREI 1 $T2
;STOREF $T2 $R
;RET
;JUMP label0_end
;LABEL label0_else
;STOREI 1 $T3
;SUBF $P1 $T3 $T4
;PUSH
;PUSH $T4
;JSR factorial
;POP
;POP $T5
;STOREF $T5 $L1
;MULTF $L1 $P1 $T6
;STOREF $T6 $L2
;LABEL label0_end
;STOREF $L2 $R
;RET
;LABEL exponential
;LINK
;STOREF 1.0 $T1
;STOREF $T1 $L1
;LABEL label1_start
;STOREI 0 $T2
;LE $P2 $T2 label1_end
;MULTF $L1 $P1 $T3
;STOREF $T3 $L1
;STOREI 1 $T4
;SUBF $P2 $T4 $T5
;STOREF $T5 $P2
;JUMP label1_start
;LABEL label1_end
;STOREF $L1 $R
;RET
;LABEL estPIGL
;LINK
;STOREF 0.0 $T1
;STOREF $T1 $L1
;STOREF 1.0 $T2
;STOREF $T2 $L2
;STOREI 1 $T3
;STOREF $T3 $L3
;LABEL label2_start
;GE $L2 $P1 label2_end
;STOREI 2 $T4
;MULTI $T4 $L2 $T5
;STOREI 1 $T6
;SUBI $T5 $T6 $T7
;DIVF $L3 $T7 $T8
;ADDF $L1 $T8 $T9
;STOREF $T9 $L1
;STOREI 1 $T10
;ADDF $L2 $T10 $T11
;STOREF $T11 $L2
;STOREI 0 $T12
;SUBI $T12 $L3 $T13
;STOREF $T13 $L3
;JUMP label2_start
;LABEL label2_end
;STOREI 4 $T14
;MULTI $T14 $L1 $T15
;STOREF $T15 $R
;RET
;LABEL estPIEU
;LINK
;STOREF 0.0 $T1
;STOREF $T1 $L1
;STOREF 0.0 $T2
;STOREF $T2 $L2
;LABEL label3_start
;GE $L2 $P1 label3_end
;PUSH
;PUSH $L2
;JSR factorial
;POP
;POP $T3
;STOREI 2 $T4
;PUSH
;PUSH $T3
;PUSH $T4
;JSR exponential
;POP
;POP
;POP $T5
;STOREI 2 $T6
;STOREI 1 $T7
;ADDF $L2 $T7 $T8
;PUSH
;PUSH $T6
;PUSH $T8
;JSR exponential
;POP
;POP
;POP $T9
;MULTF $T5 $T9 $T10
;STOREI 2 $T11
;MULTI $T11 $L2 $T12
;STOREI 1 $T13
;ADDI $T12 $T13 $T14
;PUSH
;PUSH $T14
;JSR factorial
;POP
;POP $T15
;DIVF $T10 $T15 $T16
;ADDF $L1 $T16 $T17
;STOREF $T17 $L1
;STOREI 1 $T18
;ADDF $L2 $T18 $T19
;STOREF $T19 $L2
;JUMP label3_start
;LABEL label3_end
;STOREF $L1 $R
;RET
;LABEL estPIGO
;LINK
;STOREF 0.0 $T1
;STOREF $T1 $L1
;STOREF 0.0 $T2
;STOREF $T2 $L2
;LABEL label4_start
;GE $L2 $P1 label4_end
;PUSH
;PUSH $L2
;JSR factorial
;POP
;POP $T3
;STOREI 2 $T4
;PUSH
;PUSH $T3
;PUSH $T4
;JSR exponential
;POP
;POP
;POP $T5
;STOREI 2 $T6
;MULTI $T6 $L2 $T7
;STOREI 1 $T8
;ADDI $T7 $T8 $T9
;PUSH
;PUSH $T9
;JSR factorial
;POP
;POP $T10
;DIVF $T5 $T10 $T11
;ADDF $L1 $T11 $T12
;STOREF $T12 $L1
;STOREI 1 $T13
;ADDF $L2 $T13 $T14
;STOREF $T14 $L2
;JUMP label4_start
;LABEL label4_end
;MULTF gosperConst $L1 $T15
;STOREF $T15 $R
;RET
;LABEL main
;LINK
;STOREF 2.59808 $T1
;STOREF $T1 gosperConst
;WRITES intro
;WRITES input1
;READF $L1
;PUSH
;PUSH $L1
;JSR estPIGL
;POP
;POP $T2
;STOREF $T2 $L2
;WRITEF $L2
;WRITES eol
;WRITES input2
;READF $L1
;PUSH
;PUSH $L1
;JSR estPIEU
;POP
;POP $T3
;STOREF $T3 $L2
;WRITEF $L2
;WRITES eol
;WRITES input3
;READF $L1
;PUSH
;PUSH $L1
;JSR estPIGO
;POP
;POP $T4
;STOREF $T4 $L2
;WRITEF $L2
;WRITES eol
;tiny code
str intro "This program estimates pi based on\na few different algorithms.\n"
str input1 "Enter the number of iterations for Gregory and Leibniz's (at least 1000): "
str input2 "Enter the number of iterations for Euler's (MAX 19): "
str input3 "Enter the number of iterations for Gosper's (MAX 21): "
str eol "\n"
var gosperConst
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label factorial
link 2
move 0 r0
cmpr $6 r0
jne label0_else
move 1 r1
move r1 r0
move r0 $7
unlnk
ret
jmp label0_end
label label0_else
move 1 r2
move $6 r3
subr r2 r3
push
push r3
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
pop r0
move r0 $-1
move $-1 r0
mulr $6 r0
move r0 $-2
label label0_end
move $-2 r0
move r0 $7
unlnk
ret
label exponential
link 1
move 1.0 r0
move r0 $-1
label label1_start
move 0 r0
cmpr $6 r0
jle label1_end
move $-1 r1
mulr $7 r1
move r1 $-1
move 1 r0
move $6 r1
subr r0 r1
move r1 $6
jmp label1_start
label label1_end
move $-1 r0
move r0 $8
unlnk
ret
label estPIGL
link 3
move 0.0 r0
move r0 $-1
move 1.0 r0
move r0 $-2
move 1 r0
move r0 $-3
label label2_start
move $6 r0
cmpr $-2 r0
jge label2_end
move 2 r1
muli $-2 r1
move 1 r2
subi r2 r1
move $-3 r3
divr r1 r3
move $-1 r0
addr r3 r0
move r0 $-1
move 1 r0
move $-2 r1
addr r0 r1
move r1 $-2
move 0 r0
subi $-3 r0
move r0 $-3
jmp label2_start
label label2_end
move 4 r0
muli $-1 r0
move r0 r0
move r0 $7
unlnk
ret
label estPIEU
link 2
move 0.0 r0
move r0 $-1
move 0.0 r0
move r0 $-2
label label3_start
move $6 r0
cmpr $-2 r0
jge label3_end
push
push $-2
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
pop r1
move 2 r2
push
push r1
push r2
push r0
push r1
push r2
push r3
jsr exponential
pop r3
pop r2
pop r1
pop r0
pop
pop
pop r3
move 2 r0
move 1 r1
move $-2 r2
addr r1 r2
push
push r0
push r2
push r0
push r1
push r2
push r3
jsr exponential
pop r3
pop r2
pop r1
pop r0
pop
pop
pop r0
mulr r0 r3
move 2 r1
muli $-2 r1
move 1 r2
addi r2 r1
push
push r1
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
pop r0
divr r0 r3
move $-1 r2
addr r3 r2
move r2 $-1
move 1 r0
move $-2 r1
addr r0 r1
move r1 $-2
jmp label3_start
label label3_end
move $-1 r0
move r0 $7
unlnk
ret
label estPIGO
link 3
move 0.0 r0
move r0 $-1
move 0.0 r0
move r0 $-2
label label4_start
move $6 r0
cmpr $-2 r0
jge label4_end
push
push $-2
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
pop r1
move 2 r2
push
push r1
push r2
push r0
push r1
push r2
push r3
jsr exponential
pop r3
pop r2
pop r1
pop r0
pop
pop
pop r3
move 2 r0
muli $-2 r0
move 1 r1
addi r1 r0
push
push r0
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
pop r2
divr r2 r3
move $-1 r1
addr r3 r1
move r1 $-1
move 1 r0
move $-2 r1
addr r0 r1
move r1 $-2
jmp label4_start
label label4_end
move gosperConst r0
mulr $-1 r0
move r0 r0
move r0 $7
unlnk
ret
label main
link 2
move 2.59808 r0
move r0 gosperConst
sys writes intro
sys writes input1
sys readr $-1
push
push $-1
push r0
push r1
push r2
push r3
jsr estPIGL
pop r3
pop r2
pop r1
pop r0
pop
pop r0
move r0 $-2
sys writer $-2
sys writes eol
sys writes input2
sys readr $-1
push
push $-1
push r0
push r1
push r2
push r3
jsr estPIEU
pop r3
pop r2
pop r1
pop r0
pop
pop r0
move r0 $-2
sys writer $-2
sys writes eol
sys writes input3
sys readr $-1
push
push $-1
push r0
push r1
push r2
push r3
jsr estPIGO
pop r3
pop r2
pop r1
pop r0
pop
pop r0
move r0 $-2
sys writer $-2
sys writes eol
end
